import("stdfaust.lib");

os = library("oscillators.lib");
ma = library("maths.lib");

sinwaveform_test = os.sinwaveform(1024);
coswaveform_test = os.coswaveform(1024);
phasor_test = os.phasor(1024, 440);
hs_phasor_test = os.hs_phasor(1024, 330, button("reset"));
hsp_phasor_test = os.hsp_phasor(1024, 330, button("reset"), 0.25);
oscsin_test = os.oscsin(440);
hs_oscsin_test = os.hs_oscsin(440, button("reset"));
osccos_test = os.osccos(440);
hs_osccos_test = os.hs_osccos(440, button("reset"));
oscp_test = os.oscp(440, ma.PI/3);
osci_test = os.osci(440);
osc_test = os.osc(440);
m_oscsin_test = os.m_oscsin(440);
m_osccos_test = os.m_osccos(440);
lf_imptrain_test = os.lf_imptrain(3);
lf_pulsetrainpos_test = os.lf_pulsetrainpos(3, 0.35);
lf_pulsetrain_test = os.lf_pulsetrain(3, 0.35);
lf_squarewavepos_test = os.lf_squarewavepos(3);
lf_squarewave_test = os.lf_squarewave(3);
lf_trianglepos_test = os.lf_trianglepos(3);
lf_triangle_test = os.lf_triangle(3);
lf_rawsaw_test = os.lf_rawsaw(128);
lf_sawpos_test = os.lf_sawpos(3);
lf_sawpos_phase_test = os.lf_sawpos_phase(3, 0.25);
lf_sawpos_reset_test = os.lf_sawpos_reset(3, button("reset"));
lf_sawpos_phase_reset_test = os.lf_sawpos_phase_reset(3, 0.75, button("reset"));
lf_saw_test = os.lf_saw(3);
sawN_test = os.sawN(3, 440);
sawNp_test = os.sawNp(3, 330, 0.5);
saw2_test = os.saw2(220);
saw3_test = os.saw3(220);
saw4_test = os.saw4(220);
saw2ptr_test = os.saw2ptr(220);
saw2dpw_test = os.saw2dpw(220);
sawtooth_test = os.sawtooth(220);
saw2f2_test = os.saw2f2(220);
saw2f4_test = os.saw2f4(220);
pulsetrainN_test = os.pulsetrainN(3, 220, 0.25);
pulsetrain_test = os.pulsetrain(220, 0.25);
squareN_test = os.squareN(3, 220);
square_test = os.square(220);
imptrainN_test = os.imptrainN(3, 220);
imptrain_test = os.imptrain(220);
triangleN_test = os.triangleN(3, 220);
triangle_test = os.triangle(220);
impulse_test = os.impulse;
oscb_test = os.oscb(440);
oscrq_test = os.oscrq(440);
oscrs_test = os.oscrs(440);
oscrc_test = os.oscrc(440);
oscs_test = os.oscs(440);
quadosc_test = os.quadosc(440);
sidebands_test = os.quadosc(110) : os.sidebands((1, 0.5, 0.25));
sidebands_list_test = os.quadosc(110) : os.sidebands_list(3);
dsf_oscc_test = os.dsf.oscc(220, 110, 0.6);
dsf_oscs_test = os.dsf.oscs(220, 110, 0.6);
dsf_osccN_test = os.dsf.osccN(220, 110, 0.6, 4);
dsf_oscsN_test = os.dsf.oscsN(220, 110, 0.6, 4);
dsf_osccNq_test = os.dsf.osccNq(220, 110, 0.6);
dsf_oscsNq_test = os.dsf.oscsNq(220, 110, 0.6);
oscwc_test = os.oscwc(440);
oscws_test = os.oscws(440);
oscq_test = os.oscq(440);
oscw_test = os.oscw(440);
CZsaw_test = os.CZsaw(os.lf_sawpos(110), 0.5);
CZsawP_test = os.CZsawP(os.lf_sawpos(110), 0.5);
CZsquare_test = os.CZsquare(os.lf_sawpos(110), 0.5);
CZsquareP_test = os.CZsquareP(os.lf_sawpos(110), 0.5);
CZpulse_test = os.CZpulse(os.lf_sawpos(110), 0.5);
CZpulseP_test = os.CZpulseP(os.lf_sawpos(110), 0.5);
CZsinePulse_test = os.CZsinePulse(os.lf_sawpos(110), 0.5);
CZsinePulseP_test = os.CZsinePulseP(os.lf_sawpos(110), 0.5);
CZhalfSine_test = os.CZhalfSine(os.lf_sawpos(110), 0.5);
CZhalfSineP_test = os.CZhalfSineP(os.lf_sawpos(110), 0.5);
CZresSaw_test = os.CZresSaw(os.lf_sawpos(110), 2.5);
CZresTriangle_test = os.CZresTriangle(os.lf_sawpos(110), 2.5);
CZresTrap_test = os.CZresTrap(os.lf_sawpos(110), 2.5);
polyblep_test = os.polyblep(0.2, os.lf_sawpos(220));
polyblep_saw_test = os.polyblep_saw(220);
polyblep_square_test = os.polyblep_square(220);
polyblep_triangle_test = os.polyblep_triangle(220);
